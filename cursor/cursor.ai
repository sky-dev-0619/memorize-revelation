# 외운다. 계시록 - 요한계시록 암기 학습 서비스

## 📖 서비스 개요
- **목적**: 요한계시록 전체를 체계적으로 암기할 수 있도록 지원하는 학습 웹 애플리케이션
- **핵심 기능**: 선택한 범위의 빈칸 문제 생성, 입력 및 채점, 정답 확인

## 🎯 주요 기능

### 1. 범위 선택 시스템
- **UI**: Select box를 사용한 장/절 선택
- **형태**: "시작: [장] 장 [절] 절 | 끝: [장] 장 [절] 절"
- **동작**: 
  - 시작장 변경 시 끝장 옵션 자동 필터링 (시작장 이상만 선택 가능)
  - 같은 장 선택 시 끝절이 시작절 이상만 선택 가능
  - 끝절 기본값은 해당 장의 마지막 절로 설정

### 2. 난이도 선택 시스템
- **UI**: Radio 버튼 5개 (카드 형태)
- **단계별 빈칸 비율**:
  - 1단계: 기초 - 빈칸 15%
  - 2단계: 초급 - 빈칸 25%
  - 3단계: 중급 - 빈칸 40%
  - 4단계: 고급 - 빈칸 60%
  - 5단계: 최고급 - 빈칸 80%

### 3. 빈칸 문제 생성
- **알고리즘**: 각 절에서 설정된 비율만큼 랜덤하게 단어를 빈칸으로 변환
- **연속 빈칸 처리**: 연속된 빈칸들을 하나의 input 필드로 통합
- **입력 필드**: 정답 글자 수에 따라 동적으로 너비 조정
- **placeholder**: 언더바(_) 제거, 깔끔한 빈 상태

### 4. 채점 시스템
- **비교 로직**: 공백과 대소문자를 무시하고 텍스트 일치 여부 판단
- **시각적 피드백**: 
  - 정답: 초록색 배경
  - 오답: 빨간색 배경
- **절별 정답 확인**: 채점 후 각 절을 클릭하면 해당 절의 전체 텍스트 팝업 표시

### 5. 모달 시스템
- **본문 확인**: 선택한 범위의 전체 본문을 모달로 표시
- **절별 팝업**: 채점 후 개별 절 클릭 시 해당 절만 모달로 표시
- **닫기 방법**: ESC 키, 배경 클릭, X 버튼

### 6. 추가 기능
- **다시 문제풀기**: 채점 후 입력 내용 유지하며 문제풀이 모드로 복귀
- **Scroll-to-Top**: 우측 하단 floating 버튼으로 페이지 상단 이동

## 🎨 UI/UX 디자인

### 반응형 레이아웃
- **PC (769px+)**: 시작/끝 범위가 한 줄에 배치, 난이도 버튼 가로 배열
- **태블릿 (768px-)**: 시작/끝 각각 별도 줄, 난이도 버튼 가로 배열 유지
- **모바일 (480px-)**: 난이도 버튼 세로 배열, select box 크기 최적화
- **소형 모바일 (360px-)**: 모든 요소 추가 압축, 터치 최적화

### 스타일링
- **컬러 테마**: 파란색-보라색 그라데이션 (#667eea → #764ba2)
- **애니메이션**: 호버 효과, 부드러운 전환, 버튼 상승 효과
- **아이콘**: 
  - 파비콘: resource/icon/open_book.png
  - Floating 버튼: resource/icon/arrow_up.png

### 접근성
- **키보드 지원**: Tab 네비게이션, ESC로 모달 닫기
- **터치 최적화**: 충분한 터치 영역, 모바일 친화적 크기
- **시각적 피드백**: 명확한 상태 표시, 색상 대비 고려

## 🏗️ 기술 구조

### HTML
- **시맨틱 구조**: header, main, section 등 의미있는 태그 사용
- **폼 요소**: select, radio input, text input 등
- **모달**: 팝업 표시를 위한 구조

### CSS
- **반응형**: @media 쿼리로 다양한 화면 크기 지원
- **Flexbox/Grid**: 현대적 레이아웃 기법
- **애니메이션**: transition, transform 등
- **변수**: CSS 커스텀 속성 활용

### JavaScript
- **모듈화**: 기능별 함수 분리
- **이벤트 처리**: 사용자 상호작용 관리
- **DOM 조작**: 동적 콘텐츠 생성 및 수정
- **상태 관리**: 전역 변수로 애플리케이션 상태 추적

## 📁 리소스 구조
```
/resource/
  ├── rev1.txt ~ rev4.txt (계시록 원본 텍스트)
  └── /icon/
      ├── open_book.png (파비콘)
      └── arrow_up.png (스크롤 버튼)

/
├── index.html (메인 페이지)
├── styles.css (스타일시트)
├── script.js (메인 로직)
└── data.js (JSON 변환된 성경 데이터)
```

## 🚀 호스팅
- **플랫폼**: GitHub Pages (github.io)
- **도메인**: 사용자의 GitHub 저장소 기반
- **배포**: GitHub 저장소 push 시 자동 배포

## 🎯 사용자 플로우
1. 페이지 로드 → 범위 선택 (기본값 설정됨)
2. 난이도 선택 (1단계 기본 선택됨)
3. "문제 생성" 클릭
4. 빈칸에 답 입력
5. "채점하기" 클릭 → 결과 확인
6. 필요시 "본문 확인" 또는 절별 클릭으로 정답 확인
7. "다시 문제풀기"로 재시도 또는 새로운 범위/난이도 선택

## 📋 개발 고려사항
- **성능**: 효율적인 DOM 조작, 이벤트 위임
- **호환성**: 모든 주요 브라우저 지원
- **유지보수**: 모듈화된 코드 구조, 명확한 함수명
- **확장성**: 새로운 기능 추가 용이한 구조 